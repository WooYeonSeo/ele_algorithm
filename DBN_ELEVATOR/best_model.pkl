ccopy_reg
_reconstructor
p1
(clogistic_sgd
LogisticRegression
p2
c__builtin__
object
p3
NtRp4
(dp5
S'b'
g1
(ctheano.tensor.sharedvar
TensorSharedVariable
p6
g3
NtRp7
(dp8
S'auto_name'
p9
S'auto_58'
p10
sS'index'
p11
NsS'tag'
p12
(itheano.gof.utils
scratchpad
p13
(dp14
S'trace'
p15
(lp16
(S'/usr/local/lib/python2.7/site-packages/theano/compile/sharedvalue.py'
p17
I212
S'shared'
p18
S'utils.add_tag_trace(var)'
tp19
asbsS'container'
p20
g1
(ctheano.gof.link
Container
p21
g3
NtRp22
(dp23
S'name'
p24
S'b'
sS'storage'
p25
(lp26
cnumpy.core.multiarray
_reconstruct
p27
(cnumpy
ndarray
p28
(I0
tS'b'
tRp29
(I1
(I17
tcnumpy
dtype
p30
(S'f8'
I0
I1
tRp31
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S"c\x0c\xe3W\x92!\xe9\xbfc\x0c\xe3W\x92!\xe9\xbf\x9b\xd4\xd6\xb9t\x0e\xe9\xbfc\x0c\xcb\xf826\xe4?\xf1\x85i\x80\xd1\xf5\xb8?\x18\xae\x1fT`4\xcd?\\R(\xd3I`\xc9?\x88\xe3\x0e\xec*\x9b\xcc?,\xc47`\xe9;\xd1?\x84\xe9x'\xf1\r\xc8?\x91\x9bJ\xb5\xfc\x00\xbc?\x16O\x03s\xb0\x18\xbf?~-I\xa7I\xcb\xc5?^\xfc\xbco\xfaR\xc0?e\xa0C\xed\xc6p\x87?jz\x91\xf6\x14\x1c\xc1?\xa1h\xbf\x08$\x01\xc4\xbf"
tbasS'strict'
p32
I00
sS'readonly'
p33
I00
sS'type'
p34
g1
(ctheano.tensor.type
TensorType
p35
g3
NtRp36
(dp37
S'broadcastable'
p38
(I00
tp39
sS'dtype'
p40
S'float64'
p41
sS'numpy_dtype'
p42
g31
sS'sparse_grad'
p43
I00
sg24
NsbsS'allow_downcast'
p44
Nsbsg24
S'b'
sS'owner'
p45
Nsg34
g36
sbsS'y_pred'
p46
g1
(ctheano.tensor.var
TensorVariable
p47
g3
NtRp48
(dp49
g9
S'auto_68'
p50
sg11
I1
sg12
(itheano.gof.utils
scratchpad
p51
(dp52
g15
(lp53
sbsg24
S'argmax'
p54
sg45
g1
(ctheano.gof.graph
Apply
p55
g3
NtRp56
(dp57
S'inputs'
p58
(lp59
g1
(g47
g3
NtRp60
(dp61
g9
S'auto_65'
p62
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p63
(dp64
g15
(lp65
(S'/Users/vantovan/Projects/elev_pro/dbn_test/logistic_sgd.py'
p66
I102
S'__init__'
p67
S'self.p_y_given_x = T.nnet.softmax(T.dot(input, self.W) + self.b)'
tp68
asbsg24
Nsg45
g1
(g55
g3
NtRp69
(dp70
g58
(lp71
g1
(g47
g3
NtRp72
(dp73
g9
S'auto_64'
p74
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p75
(dp76
g15
(lp77
(g66
I102
g67
S'self.p_y_given_x = T.nnet.softmax(T.dot(input, self.W) + self.b)'
tp78
asbsg24
Nsg45
g1
(g55
g3
NtRp79
(dp80
g58
(lp81
g1
(g47
g3
NtRp82
(dp83
g9
S'auto_59'
p84
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p85
(dp86
g15
(lp87
(g66
I102
g67
S'self.p_y_given_x = T.nnet.softmax(T.dot(input, self.W) + self.b)'
tp88
asbsg24
Nsg45
g1
(g55
g3
NtRp89
(dp90
g58
(lp91
g1
(g47
g3
NtRp92
(dp93
g9
S'auto_55'
p94
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p95
(dp96
g15
(lp97
(S'/Users/vantovan/Projects/elev_pro/dbn_test/mlp.py'
p98
I108
g67
S'else activation(lin_output)'
tp99
asbsg24
Nsg45
g1
(g55
g3
NtRp100
(dp101
g58
(lp102
g1
(g47
g3
NtRp103
(dp104
g9
S'auto_52'
p105
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p106
(dp107
g15
(lp108
(g98
I105
g67
S'lin_output = T.dot(input, self.W) + self.b'
tp109
asbsg24
Nsg45
g1
(g55
g3
NtRp110
(dp111
g58
(lp112
g1
(g47
g3
NtRp113
(dp114
g9
S'auto_47'
p115
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p116
(dp117
g15
(lp118
(g98
I105
g67
S'lin_output = T.dot(input, self.W) + self.b'
tp119
asbsg24
Nsg45
g1
(g55
g3
NtRp120
(dp121
g58
(lp122
g1
(g47
g3
NtRp123
(dp124
g9
S'auto_43'
p125
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p126
(dp127
g15
(lp128
(g98
I108
g67
S'else activation(lin_output)'
tp129
asbsg24
Nsg45
g1
(g55
g3
NtRp130
(dp131
g58
(lp132
g1
(g47
g3
NtRp133
(dp134
g9
S'auto_40'
p135
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p136
(dp137
g15
(lp138
(g98
I105
g67
S'lin_output = T.dot(input, self.W) + self.b'
tp139
asbsg24
Nsg45
g1
(g55
g3
NtRp140
(dp141
g58
(lp142
g1
(g47
g3
NtRp143
(dp144
g9
S'auto_35'
p145
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p146
(dp147
g15
(lp148
(g98
I105
g67
S'lin_output = T.dot(input, self.W) + self.b'
tp149
asbsg24
Nsg45
g1
(g55
g3
NtRp150
(dp151
g58
(lp152
g1
(g47
g3
NtRp153
(dp154
g9
S'auto_31'
p155
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p156
(dp157
g15
(lp158
(g98
I108
g67
S'else activation(lin_output)'
tp159
asbsg24
Nsg45
g1
(g55
g3
NtRp160
(dp161
g58
(lp162
g1
(g47
g3
NtRp163
(dp164
g9
S'auto_28'
p165
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p166
(dp167
g15
(lp168
(g98
I105
g67
S'lin_output = T.dot(input, self.W) + self.b'
tp169
asbsg24
Nsg45
g1
(g55
g3
NtRp170
(dp171
g58
(lp172
g1
(g47
g3
NtRp173
(dp174
g9
S'auto_23'
p175
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p176
(dp177
g15
(lp178
(g98
I105
g67
S'lin_output = T.dot(input, self.W) + self.b'
tp179
asbsg24
Nsg45
g1
(g55
g3
NtRp180
(dp181
g58
(lp182
g1
(g47
g3
NtRp183
(dp184
g9
S'auto_19'
p185
sg11
Nsg12
(itheano.gof.utils
scratchpad
p186
(dp187
g15
(lp188
(S'/Users/vantovan/Projects/elev_pro/dbn_test/dbn.py'
p189
I65
g67
S"self.x = T.matrix('x')  # the data is presented as rasterized images"
tp190
asbsg24
S'x'
sg45
Nsg34
g1
(g35
g3
NtRp191
(dp192
g38
(I00
I00
tp193
sg40
S'float64'
p194
sg42
g31
sg43
I00
sg24
Nsbsbag1
(g6
g3
NtRp195
(dp196
g9
S'auto_21'
p197
sg11
Nsg12
(itheano.gof.utils
scratchpad
p198
(dp199
g15
(lp200
(g17
I212
g18
S'utils.add_tag_trace(var)'
tp201
asbsg20
g1
(g21
g3
NtRp202
(dp203
g24
S'W'
sg25
(lp204
g27
(g28
(I0
tS'b'
tRp205
(I1
(I7
I7
tg31
I00
S'\x98\x02!\xc4\xf0-vA\xe6\xfd7\xaeZ\xb0\xff\xbf\x1e\x1bJ\xc2\xf0-vA\xb94\xbf\xc4\xf0-vA\xfc}\x8aj\x87\xf0\xf8\xbf\x1eo\xd0\xc9\xf0-vA\x02\x8ca\x19\xcf\x96\xfc\xbf\xa5\x1c\xb5\x85\xe3\x9a\xa4@n\xb6g5\xe7\xac\x0b\xc0w`\x96n\x04\x99\xa4@\x82S\xbc\x8cc\x9b\xa4@N\xb5@\xe6\xea\\\x03\xc0@!i\xcfa\x97\xa4@\x1b\x07\xb1X\xdc\t\xd3\xbfS\xb4\'vv\xc4\x87@\xe0\x80\xa6T\xe6\x98\xdb\xbf\x9e\xa2\x88\xdc\x06\xbe\x87@\xfc\xd2\xce\xbc\x1b\xaf\x87@\x10\x07/\x9cK\x8e\xce\xbf\x8b\x9c\xb1^\x84\xbd\x87@4\x8a\xf2\xe4\xf21\x01\xc0.\x10\xa2\x16\xf6g\xf2\xbf.\r\xf8\x05\xeb\xe7\xf1?6\x1e\x95s\x18\xa9\xfd\xbf`n\xddS\xba\xa5\xf8\xbfk\xd5\xfb\xad1r\xe7?\x14\xa7W\rQK\xfc\xbf-\xe6\xd9dGe\xf6\xbf\xf1\x1a\xd0\x04\xa60\x05@@\x8fV\xc6\x89I\xd3?\x8f\xbdq\x86\xe4\xb3\xf8?vY\x88\\\xb2\x01\x03\xc0\xe5\xea\x9d\xce\x1fM\xff\xbf3:}\xbd7u\xfb\xbf\x1f\x02\xa2w\xcf\xdb\x02\xc0\xe4\xa9\x03(\xf9\xc4\xe0?>\xcc\x00\xa8\xaf\x93\xe4?%C\x8bj\xd7"\xe0\xbfO\xcfK\x1c%3\xf7\xbf\x90&\xd3<\xc1\x97\xdb\xbf\xf1g\xa6:;|\xf2\xbf\x18\xc7\xda\xe2\x10B\xf3\xbf\xa1p\xfd\xf8\xbe\xf3\xc5@_n\x11\x1f!\xa5\xe3\xbf6H\x96\x1d\xd8\xf4\xc5@_\xd1)\xd2\xba\xf2\xc5@\xe6\xa3r8\xc9S\xf8\xbf?\x93\xd6\xcd\r\xf3\xc5@Qx\x88e\x11C\xfa\xbf'
tbasg32
I00
sg33
I00
sg34
g1
(g35
g3
NtRp206
(dp207
g38
(I00
I00
tp208
sg40
S'float64'
p209
sg42
g31
sg43
I00
sg24
Nsbsg44
Nsbsg24
S'W'
sg45
Nsg34
g206
sbasg12
(itheano.gof.utils
scratchpad
p210
(dp211
bsS'outputs'
p212
(lp213
g173
asS'op'
p214
g1
(ctheano.tensor.basic
Dot
p215
g3
NtRp216
(dp217
S'_op_use_c_code'
p218
S'/usr/bin/clang++'
p219
sbsbsg34
g1
(g35
g3
NtRp220
(dp221
g38
(I00
I00
tp222
sg40
S'float64'
p223
sg42
g31
sg43
I00
sg24
Nsbsbag1
(g47
g3
NtRp224
(dp225
g9
S'auto_27'
p226
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p227
(dp228
bsg24
Nsg45
g1
(g55
g3
NtRp229
(dp230
g58
(lp231
g1
(g6
g3
NtRp232
(dp233
g9
S'auto_22'
p234
sg11
Nsg12
(itheano.gof.utils
scratchpad
p235
(dp236
g15
(lp237
(g17
I212
g18
S'utils.add_tag_trace(var)'
tp238
asbsg20
g1
(g21
g3
NtRp239
(dp240
g24
S'b'
sg25
(lp241
g27
(g28
(I0
tS'b'
tRp242
(I1
(I7
tg31
I00
S'{T=X\x1b\xf3-?\xaaL\xc7A\xef\xb1\xf9\xbf\x15\x1a\xba\x9b+\xd8K?\xc8\xf8V\x10\x1e=z?S\xa3\x96\xdb\x032\xf8\xbf\x93\xa3R\xfd\xe2\x8aq? \xbdnq\xfc\x1f\xf5\xbf'
tbasg32
I00
sg33
I00
sg34
g1
(g35
g3
NtRp243
(dp244
g38
(I00
tp245
sg40
S'float64'
p246
sg42
g31
sg43
I00
sg24
Nsbsg44
Nsbsg24
S'b'
sg45
Nsg34
g243
sbasg12
(itheano.gof.utils
scratchpad
p247
(dp248
bsg212
(lp249
g224
asg214
g1
(ctheano.tensor.elemwise
DimShuffle
p250
g3
NtRp251
(dp252
S'drop'
p253
(lp254
sS'shuffle'
p255
(lp256
I0
asS'augment'
p257
(lp258
I0
asS'input_broadcastable'
p259
g245
sS'inplace'
p260
I00
sS'new_order'
p261
(S'x'
I0
tp262
sg218
g219
sbsbsg34
g1
(g35
g3
NtRp263
(dp264
g38
(I01
I00
tp265
sg40
g246
sg42
g31
sg43
I00
sg24
Nsbsbasg12
(itheano.gof.utils
scratchpad
p266
(dp267
bsg212
(lp268
g163
asg214
g1
(ctheano.tensor.elemwise
Elemwise
p269
g3
NtRp270
(dp271
S'__module__'
p272
S'tensor'
p273
sS'scalar_op'
p274
g1
(ctheano.scalar.basic
Add
p275
g3
NtRp276
(dp277
S'output_types_preference'
p278
ctheano.scalar.basic
upcast_out
p279
sg218
g219
sg24
S'add'
p280
sbsg24
S'Elemwise{add,no_inplace}'
p281
sg218
g219
sS'destroy_map'
p282
(dp283
sS'nfunc_spec'
p284
(g280
I2
I1
tp285
sS'inplace_pattern'
p286
(dp287
sS'openmp'
p288
I00
sS'__doc__'
p289
S"elementwise addition\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Examples:\n      Elemwise(add) # represents + on tensors (x + y)\n      Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n      Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n      Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n        # along the first dimension to match the first input\n      Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n        # second dimension\n      Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n      Elemwise(log)(rand(3, 4, 5))\n    "
p290
sbsbsg34
g1
(g35
g3
NtRp291
(dp292
g38
(I00
I00
tp293
sg40
g194
sg42
g31
sg43
I00
sg24
Nsbsbasg12
(itheano.gof.utils
scratchpad
p294
(dp295
bsg212
(lp296
g153
asg214
g1
(g269
g3
NtRp297
(dp298
g24
S'sigmoid'
p299
sg274
g1
(ctheano.tensor.nnet.sigm
ScalarSigmoid
p300
g3
NtRp301
(dp302
g278
ctheano.scalar.basic
upgrade_to_float
p303
sg218
g219
sg24
S'scalar_sigmoid'
p304
sbsg282
(dp305
sg284
Nsg286
(dp306
sg288
I00
sg218
g219
sbsbsg34
g1
(g35
g3
NtRp307
(dp308
g38
(I00
I00
tp309
sg40
g194
sg42
g31
sg43
I00
sg24
Nsbsbag1
(g6
g3
NtRp310
(dp311
g9
S'auto_33'
p312
sg11
Nsg12
(itheano.gof.utils
scratchpad
p313
(dp314
g15
(lp315
(g17
I212
g18
S'utils.add_tag_trace(var)'
tp316
asbsg20
g1
(g21
g3
NtRp317
(dp318
g24
S'W'
sg25
(lp319
g27
(g28
(I0
tS'b'
tRp320
(I1
(I7
I7
tg31
I00
S'\xe9\xf9\xcc\xd3o\xb9\x06@\x1du\x8a\x17Yg\xe1\xbf\xd9xe\x07\x8d\x03\t@o\x8f\xce%\x00\'\xe0?^H\xaa\xdf~\xf6\xe5\xbfI\n\x17_\x07C\x05\xc0Bg\xf2B\xec\x13\xea\xbf~\n\'\xd5\xd4:\xeb\xbfxa\x88\x99\xde\xcc\xf9?\x16\xab\xfc#\xd8N\x07\xc0k\x04\xf8\xdcD\xca\xff\xbf[A\xf8\x1d%\x04\xf4\xbf;[W\x07\xc3\xee\xf8?P\xa8\xf0\xbaj\x87\xf4\xbf\\mf81.\xfe?K\x98\x1d\xa0\x97\x14\xff\xbf\x10)\xdf\'b\xe5\xeb?ue\xa57Eb\r@\xff\xe6\x9b\xde-m\xfd\xbfod\x85 \xfb\xde\xd5\xbfh\xab\xcf\xe4\x15\xb0\xf4\xbf7?0\x85\x9d|\xeb?\xedg\x8b\xa3\x9c\xbf\x01\xc0\xf2\x19*Rx6\x08@R\x19>\x80x\xff\n@\x82\xbc\xb7\x00\xcc\xa9\xe0\xbf7\r\xfc\xe03p\xf5\xbf\xf1\xf9\xd9\x17\x99\xd2\xc6\xbf;\xb8\xd5J\xe0G\x02\xc0C\x99\xd2\x90 $\xf4?\x16H\xe0\xfc\xf0\xfc\x08\xc0f\xa3\xe44\xcd:\xf1\xbf\xe3\xbd\x93Ky\xf0\xfe?\xd1\x11\xdb\xf4\xcb\xbd\xf7\xbf\xda\x95\xd4J\xe7"\xe9\xbf\xe24\xc2^\xf4\xbb\r@\x9b\x05\x99\xdd\t\x05\xe4?\xb2\xf4}\xa9\x06\x88\xf7?\xa9>\xf4.\x98\xf8\xe3?\xbdk\n\x9f\x11\xdb\xec\xbf\xfe\xf4\xe5b\xbf!\xae\xbf?\x0ew\x13\x12\x86\xc7?/"\xec\xde\x1a\xe8\x06\xc0@T\xfd\xa9\xd7\xd6\xe6?`S,\x9du\xa6\x04\xc0]\x86\x06\xc1\xa3>\x05\xc0\xee)W\xe6\xfd\xe2\xfe?K\x88\x87\x04+f\xf1\xbf\x916\x00I\xa7\xb9\xf4?'
tbasg32
I00
sg33
I00
sg34
g1
(g35
g3
NtRp321
(dp322
g38
(I00
I00
tp323
sg40
S'float64'
p324
sg42
g31
sg43
I00
sg24
Nsbsg44
Nsbsg24
S'W'
sg45
Nsg34
g321
sbasg12
(itheano.gof.utils
scratchpad
p325
(dp326
bsg212
(lp327
g143
asg214
g216
sbsg34
g1
(g35
g3
NtRp328
(dp329
g38
(I00
I00
tp330
sg40
S'float64'
p331
sg42
g31
sg43
I00
sg24
Nsbsbag1
(g47
g3
NtRp332
(dp333
g9
S'auto_39'
p334
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p335
(dp336
bsg24
Nsg45
g1
(g55
g3
NtRp337
(dp338
g58
(lp339
g1
(g6
g3
NtRp340
(dp341
g9
S'auto_34'
p342
sg11
Nsg12
(itheano.gof.utils
scratchpad
p343
(dp344
g15
(lp345
(g17
I212
g18
S'utils.add_tag_trace(var)'
tp346
asbsg20
g1
(g21
g3
NtRp347
(dp348
g24
S'b'
sg25
(lp349
g27
(g28
(I0
tS'b'
tRp350
(I1
(I7
tg31
I00
S'\xbeL\x13[\x7f\xdb\xc1?\xed\xb6\xc0\xc2\x1d2\xe1\xbf\xbel\xfc\x16\xf3\x90\xd0?\xd6\xd4\x99il\xfe\xcc?\xf7\xc8n\xbdG[\xdb\xbf\xef\xe7O9e[\xd8\xbf\xff\xdc\x14\xeaQ|\xd2\xbf'
tbasg32
I00
sg33
I00
sg34
g1
(g35
g3
NtRp351
(dp352
g38
(I00
tp353
sg40
S'float64'
p354
sg42
g31
sg43
I00
sg24
Nsbsg44
Nsbsg24
S'b'
sg45
Nsg34
g351
sbasg12
(itheano.gof.utils
scratchpad
p355
(dp356
bsg212
(lp357
g332
asg214
g1
(g250
g3
NtRp358
(dp359
g253
(lp360
sg255
(lp361
I0
asg257
(lp362
I0
asg259
g353
sg260
I00
sg261
(S'x'
I0
tp363
sg218
g219
sbsbsg34
g1
(g35
g3
NtRp364
(dp365
g38
(I01
I00
tp366
sg40
g354
sg42
g31
sg43
I00
sg24
Nsbsbasg12
(itheano.gof.utils
scratchpad
p367
(dp368
bsg212
(lp369
g133
asg214
g270
sbsg34
g1
(g35
g3
NtRp370
(dp371
g38
(I00
I00
tp372
sg40
g194
sg42
g31
sg43
I00
sg24
Nsbsbasg12
(itheano.gof.utils
scratchpad
p373
(dp374
bsg212
(lp375
g123
asg214
g297
sbsg34
g1
(g35
g3
NtRp376
(dp377
g38
(I00
I00
tp378
sg40
g194
sg42
g31
sg43
I00
sg24
Nsbsbag1
(g6
g3
NtRp379
(dp380
g9
S'auto_45'
p381
sg11
Nsg12
(itheano.gof.utils
scratchpad
p382
(dp383
g15
(lp384
(g17
I212
g18
S'utils.add_tag_trace(var)'
tp385
asbsg20
g1
(g21
g3
NtRp386
(dp387
g24
S'W'
sg25
(lp388
g27
(g28
(I0
tS'b'
tRp389
(I1
(I7
I7
tg31
I00
S'M\xca\xe1\x96\xf5j\xf3?6\x98\x9e\xae\xe26\xf7?\xf62\x8b\xb0\xf4W\x07\xc0y\xaab\x91\x92\x03\x00@^\xa6\xf0AN\xa3\x01\xc0N\xc8\x83\xc6\xcd\x0e\n@F\xf7\xfd[=\xb8\xef?&[m6\xd42\x01\xc0`y~H\xd3\x11\xe8\xbf\x1a\xc2\xcb$\xa4\x88\xf2?\x19w\xaf\x0e~"\xeb\xbf\xba3pTF\xfb\xda?\xb9\xd2H\xd1\xd6X\xc8?@\x9c\x1f\x00\x17[\xc2?\xcd\x19j<\x159\xf9?\'`\xaf\xd5</\xff\xbf\xbe%d\xfe:\xdb\xe9\xbf`\xba\x01\xbf\x98)\xff?\xf0\xb3\x91;y\xbf\xe1\xbfG\xd9\xd5\xa9\xcd\xc1\xea?\x8c\xefR;Nx\x0b@\r\xa6t\xd88=\x05@#\xa2h\x01\xec(\xe7\xbfB]\xdc\xects\xdd\xbf\r\xaa\xa8Wv|\xfa?\xc2\x87\x93\x88\x83\x87\xfe\xbf_\xb2\xe0\xdb\x0b\xab\xea?\xf8\x90y *\r\xfd?\xf8\xb0\xbf\xffA\x05\xc4\xbfllv\t\x90\n\xc6\xbf\xceJ\x0f(#\xf6\xed\xbf!\x16l\x11|\x86\xe4\xbf\xef\x0c5\xbd\xa3\xf2\xf3?\xd4\xcb6[\x03\xab\x01\xc0Yvs\x1e\x81\xaf\xe3?k\xd6\x92\xf6m\x86\xf0\xbf\xeb\x08}8\xca\x13\xe0?\x05\x8en\xbb\x82\xf1\x01\xc0\xee\x9a\xd1\xae"\xe0\x03\xc0\x1dN]i\xe8\xa2\xfa?\xf8q\x1b\xa2S\x80\xf7?^\xb3\xbb|l\xbb\x00\xc0\x8e\xdb\xd3\x00\xca!\xf6\xbf\xecz\xc2\xa7\xd9O\x84\xbf\xfd\x06j\x01\xaf^\xf0\xbf\xc7\xa2iS|\xca\xf4\xbf0}Wi[\x0c\x01\xc0\x86>|]\xaez}?\x17O\xec\xe9\xcc\x9e\xc6?'
tbasg32
I00
sg33
I00
sg34
g1
(g35
g3
NtRp390
(dp391
g38
(I00
I00
tp392
sg40
S'float64'
p393
sg42
g31
sg43
I00
sg24
Nsbsg44
Nsbsg24
S'W'
sg45
Nsg34
g390
sbasg12
(itheano.gof.utils
scratchpad
p394
(dp395
bsg212
(lp396
g113
asg214
g216
sbsg34
g1
(g35
g3
NtRp397
(dp398
g38
(I00
I00
tp399
sg40
S'float64'
p400
sg42
g31
sg43
I00
sg24
Nsbsbag1
(g47
g3
NtRp401
(dp402
g9
S'auto_51'
p403
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p404
(dp405
bsg24
Nsg45
g1
(g55
g3
NtRp406
(dp407
g58
(lp408
g1
(g6
g3
NtRp409
(dp410
g9
S'auto_46'
p411
sg11
Nsg12
(itheano.gof.utils
scratchpad
p412
(dp413
g15
(lp414
(g17
I212
g18
S'utils.add_tag_trace(var)'
tp415
asbsg20
g1
(g21
g3
NtRp416
(dp417
g24
S'b'
sg25
(lp418
g27
(g28
(I0
tS'b'
tRp419
(I1
(I7
tg31
I00
S'EA\x82\x8eQ\xb1\xf2?W\xaa\x0c\xf9\xdd\xa1\xe2\xbfk\xf5\x8c\xa9\xa5w\xe9\xbf\x10\xd8\x87\xafy\x12\xf0?\xe2\x9e\xfft\xcft\xf2\xbf\x10\xd7\xb1\x84Pe\xe9?2\x92\xaa\xad\xd1\xfe\xcd?'
tbasg32
I00
sg33
I00
sg34
g1
(g35
g3
NtRp420
(dp421
g38
(I00
tp422
sg40
S'float64'
p423
sg42
g31
sg43
I00
sg24
Nsbsg44
Nsbsg24
S'b'
sg45
Nsg34
g420
sbasg12
(itheano.gof.utils
scratchpad
p424
(dp425
bsg212
(lp426
g401
asg214
g1
(g250
g3
NtRp427
(dp428
g253
(lp429
sg255
(lp430
I0
asg257
(lp431
I0
asg259
g422
sg260
I00
sg261
(S'x'
I0
tp432
sg218
g219
sbsbsg34
g1
(g35
g3
NtRp433
(dp434
g38
(I01
I00
tp435
sg40
g423
sg42
g31
sg43
I00
sg24
Nsbsbasg12
(itheano.gof.utils
scratchpad
p436
(dp437
bsg212
(lp438
g103
asg214
g270
sbsg34
g1
(g35
g3
NtRp439
(dp440
g38
(I00
I00
tp441
sg40
g194
sg42
g31
sg43
I00
sg24
Nsbsbasg12
(itheano.gof.utils
scratchpad
p442
(dp443
bsg212
(lp444
g92
asg214
g297
sbsg34
g1
(g35
g3
NtRp445
(dp446
g38
(I00
I00
tp447
sg40
g194
sg42
g31
sg43
I00
sg24
Nsbsbag1
(g6
g3
NtRp448
(dp449
g9
S'auto_57'
p450
sg11
Nsg12
(itheano.gof.utils
scratchpad
p451
(dp452
g15
(lp453
(g17
I212
g18
S'utils.add_tag_trace(var)'
tp454
asbsg20
g1
(g21
g3
NtRp455
(dp456
g24
S'W'
sg25
(lp457
g27
(g28
(I0
tS'b'
tRp458
(I1
(I7
I17
tg31
I00
S"\xbbY\xf4\x19\xb9\x17\xe9\xbf\xbbY\xf4\x19\xb9\x17\xe9\xbf\xccu\xa0-\xa3\x04\xe9\xbf\xc2*\x95K?.\xe4? \x84\x04\xf3\xf5\xeb\xb8?r\x14\xbd\x87\xe2(\xcd?h3\xf8\\XV\xc9?\xd8,\xabr\xfe\x8f\xcc?Y\r\xf6\xdc.5\xd1?\x85\xe9\xd5\x8b\x9a\x04\xc8?\xea\x18]=9\xf6\xbb?>\xb1\x9f[z\x0c\xbf?\x1c\xadIu\xbb\xc2\xc5?KX\x1aW\x9fL\xc0?R\x85,\xff\xb8h\x87?(qg\x92W\x15\xc1?\x96e\x11\xfak\xf9\xc3\xbf\t^Z\xaf\x82\xb9\xc0\xbf\t^Z\xaf\x82\xb9\xc0\xbfE\xa8\n\x96\xb3\xb1\xc0\xbf\xfeG\xc0f\x8b\xd8\xb9?\xe6T+\xcc\x8d\x86\x8e?(?(\xb7X\xb6\xa2?n\x11\xaex\xd1\xf2\xa0?\xb9^\x84\x8e9\x9c\xa3?B\x18\x16\x80\x82\xe1\xa7?:\xcb\x7f\xea\xcdq\xa1?\x8c\x14c\xbd[3\x96?Yh\xa0\xe2\xec\xf4\x93?\xc7\x1e\x19\xd8/\x8e\x9c?\xf8B\x13\x13\xdbL\x97?\x8f\xbdT\xc3\xa9\xe3q?\xadvY\xca;\xcd\x95?\x9fQ[\xf3\x8e\xfa\x9e\xbf\xf7\xdc\x90\x9f\xf6\xc5s\xbf\xf7\xdc\x90\x9f\xf6\xc5s\xbf\xd70\xfc\x9a\xf0\xb6s\xbf(U\x11\x94\xd8\xcco?[\xdd~\x84\xec\xa1C?.\xb4F\xe3u\xf9V?r\xde\xf6\xddV\xf7S?q-G\xe7\xad\x82V?\xf5\x9f\xcb:\xb2\x1f[?\x99\r\xbd\xbf\xf8\xeeR?x|\xa9y\x10\rF?\xd5\x8a#\xe7\xfbvH?\xec\x17Z\xca\x7f%Q?\xd8\xdf\xc1M\xd5\xb1I?A\x93\xecmi\x89\x12?/^\xc5\xfd\x0f\xebJ?5\xc0\xb5\xb8\xc9\x7fO\xbfY\x87\x0f\x89\xb3\x17\xe9\xbfY\x87\x0f\x89\xb3\x17\xe9\xbf\xae\xe9\xfe\xa0\x9d\x04\xe9\xbf\xe3\na\xcf:.\xe4?\xb1imf\xf0\xeb\xb8?\x8dD+\x0c\xdc(\xcd?9> \xbeRV\xc9?~\x84\xa6\x1f\xf8\x8f\xcc?\x1c|p\r+5\xd1?\xec\xd8\xbc>\x95\x04\xc8?p\xb9\xd2\x183\xf6\xbb?|*\xe3xs\x0c\xbf?_pn\xa0\xb6\xc2\xc5?\xe4*\r\xbc\x9bL\xc0?Y\xaa\x98\x18\xb4h\x87?\xfac6\xc5S\x15\xc1?\xcaS\xe9\x93g\xf9\xc3\xbfw\xb7TL\x04z`\xbfw\xb7TL\x04z`\xbf\x9f\x8c\xd7\x95\x7fm`\xbf\r\xd2\x89\x80\x8e\x7fZ?FS\x8f\x7f\xf7[0?f\x10\xc4-\xdf$C?\x1d!\xdcH)\xa3@?\xd4@7.\xeb\xc1B?2\x92\x96\x8e\t\x9aF?X\x16Be\xca\x8d??;L\xd9\xaf\xf7_2?=\xf7\x99\xe9\xc6b4?\x1d\xe5\xf5\x00T\x93<?\xef\x01%a/i5?\xf6\x96@\xf4I\xe5\xfe>'*\xe9\x9c%n6?\xb5>\x88\x11q?:\xbfI;\x9d \xf0\x0c\xe9\xbfI;\x9d \xf0\x0c\xe9\xbf\xb0\x95,\x0f\xe3\xf9\xe8\xbf$\x00\x1cmx%\xe4?r*\xbe\x0b\x00\xe1\xb8?\x11Z\xbc\x9c2\x1c\xcd?\x0c\xbf<\x80uK\xc9?w+,\xf0\xd6\x83\xcc?R16\xa2\xde-\xd1?)\xd0\xbd\xaf\x92\xfa\xc7?\xc3\xa3\x1b\xcf\xe6\xea\xbb?\x1a_9y\r\xff\xbe?\xd0+4\xb6T\xb9\xc5?\x8e(b\x9b\xc0E\xc0?\x95\x16\x83\x9ddb\x87?\xd5&*;\xe2\r\xc1?\x96\x89\xc5t;\xf1\xc3\xbf\x90x\xefw\xde\x17\xe9\xbf\x90x\xefw\xde\x17\xe9\xbf\xa4\xfd\xf0k\xc8\x04\xe9\xbf+\xe5!\xd9].\xe4?k\x0e\x1aF\x1c\xec\xb8?qV\xe7\xb2\x0e)\xcd?\x01a\xb1\x12~V\xc9?\xcc\x13cd(\x90\xcc?\xcf\xc3\x90\x15H5\xd1?\xf4\x87S\xe5\xbc\x04\xc8?\xc9<\x15\x7f_\xf6\xbb?\xf9>b\x01\xa9\x0c\xbf?\xb2\xf8\xee\x18\xdc\xc2\xc5?\x91\x07\xe4\xf2\xb6L\xc0?w\xd54\xa9\xc9h\x87?>Sl\x91q\x15\xc1?n1\xd4\xca\x87\xf9\xc3\xbf"
tbasg32
I00
sg33
I00
sg34
g1
(g35
g3
NtRp459
(dp460
g38
(I00
I00
tp461
sg40
S'float64'
p462
sg42
g31
sg43
I00
sg24
Nsbsg44
Nsbsg24
S'W'
sg45
Nsg34
g459
sbasg12
(itheano.gof.utils
scratchpad
p463
(dp464
bsg212
(lp465
g82
asg214
g216
sbsg34
g1
(g35
g3
NtRp466
(dp467
g38
(I00
I00
tp468
sg40
S'float64'
p469
sg42
g31
sg43
I00
sg24
Nsbsbag1
(g47
g3
NtRp470
(dp471
g9
S'auto_63'
p472
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p473
(dp474
bsg24
Nsg45
g1
(g55
g3
NtRp475
(dp476
g58
(lp477
g7
asg12
(itheano.gof.utils
scratchpad
p478
(dp479
bsg212
(lp480
g470
asg214
g1
(g250
g3
NtRp481
(dp482
g253
(lp483
sg255
(lp484
I0
asg257
(lp485
I0
asg259
g39
sg260
I00
sg261
(S'x'
I0
tp486
sg218
g219
sbsbsg34
g1
(g35
g3
NtRp487
(dp488
g38
(I01
I00
tp489
sg40
g41
sg42
g31
sg43
I00
sg24
Nsbsbasg12
(itheano.gof.utils
scratchpad
p490
(dp491
bsg212
(lp492
g72
asg214
g270
sbsg34
g1
(g35
g3
NtRp493
(dp494
g38
(I00
I00
tp495
sg40
g194
sg42
g31
sg43
I00
sg24
Nsbsbasg12
(itheano.gof.utils
scratchpad
p496
(dp497
bsg212
(lp498
g60
asg214
g1
(ctheano.tensor.nnet.nnet
Softmax
p499
g3
NtRp500
(dp501
g218
g219
sbsbsg34
g493
sbag1
(ctheano.tensor.var
TensorConstant
p502
g3
NtRp503
(dp504
g9
S'auto_66'
p505
sg11
Nsg12
(itheano.gof.utils
scratchpad
p506
(dp507
S'unique_value'
p508
Nsbsg24
NsS'cached'
p509
I01
sg34
g1
(g35
g3
NtRp510
(dp511
g38
(tsg40
S'int8'
p512
sg42
g30
(S'i1'
I0
I1
tRp513
(I3
S'|'
NNNI-1
I-1
I0
tbsg43
I00
sg24
NsbsS'data'
p514
g27
(g28
(I0
tS'b'
tRp515
(I1
(tg513
I00
S'\x01'
tbsbasg12
(itheano.gof.utils
scratchpad
p516
(dp517
bsg212
(lp518
g1
(g47
g3
NtRp519
(dp520
g9
S'auto_67'
p521
sg11
I0
sg12
(itheano.gof.utils
scratchpad
p522
(dp523
g15
(lp524
sbsg24
S'max'
p525
sg45
g56
sg34
g1
(g35
g3
NtRp526
(dp527
g38
(I00
tp528
sg40
g194
sg42
g31
sg43
I00
sg24
Nsbsbag48
asg214
g1
(ctheano.tensor.basic
MaxAndArgmax
p529
g3
NtRp530
(dp531
g218
g219
sbsbsg34
g1
(g35
g3
NtRp532
(dp533
g38
(I00
tp534
sg40
S'int64'
p535
sg42
g30
(S'i8'
I0
I1
tRp536
(I3
S'<'
NNNI-1
I-1
I0
tbsg43
I00
sg24
NsbsbsS'params'
p537
(lp538
g448
ag7
asS'W'
g448
sS'input'
p539
g92
sS'p_y_given_x'
p540
g60
sb.